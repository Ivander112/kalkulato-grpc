// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc_function/calculator_rpc/calculator.proto

package calculator_rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Pesan berupa input bilangan
type CalcRequest struct {
	Operand1             float32  `protobuf:"fixed32,1,opt,name=operand1,proto3" json:"operand1,omitempty"`
	Operand2             float32  `protobuf:"fixed32,2,opt,name=operand2,proto3" json:"operand2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalcRequest) Reset()         { *m = CalcRequest{} }
func (m *CalcRequest) String() string { return proto.CompactTextString(m) }
func (*CalcRequest) ProtoMessage()    {}
func (*CalcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8432beec2b3a0045, []int{0}
}

func (m *CalcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalcRequest.Unmarshal(m, b)
}
func (m *CalcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalcRequest.Marshal(b, m, deterministic)
}
func (m *CalcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalcRequest.Merge(m, src)
}
func (m *CalcRequest) XXX_Size() int {
	return xxx_messageInfo_CalcRequest.Size(m)
}
func (m *CalcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalcRequest proto.InternalMessageInfo

func (m *CalcRequest) GetOperand1() float32 {
	if m != nil {
		return m.Operand1
	}
	return 0
}

func (m *CalcRequest) GetOperand2() float32 {
	if m != nil {
		return m.Operand2
	}
	return 0
}

// Pesan berupa response output server untuk penjumlahan
type CalcAddResponse struct {
	Result               float32  `protobuf:"fixed32,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalcAddResponse) Reset()         { *m = CalcAddResponse{} }
func (m *CalcAddResponse) String() string { return proto.CompactTextString(m) }
func (*CalcAddResponse) ProtoMessage()    {}
func (*CalcAddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8432beec2b3a0045, []int{1}
}

func (m *CalcAddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalcAddResponse.Unmarshal(m, b)
}
func (m *CalcAddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalcAddResponse.Marshal(b, m, deterministic)
}
func (m *CalcAddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalcAddResponse.Merge(m, src)
}
func (m *CalcAddResponse) XXX_Size() int {
	return xxx_messageInfo_CalcAddResponse.Size(m)
}
func (m *CalcAddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalcAddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalcAddResponse proto.InternalMessageInfo

func (m *CalcAddResponse) GetResult() float32 {
	if m != nil {
		return m.Result
	}
	return 0
}

// Pesan berupa response output server untuk pengurangan
type CalcSubtractResponse struct {
	Result               float32  `protobuf:"fixed32,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalcSubtractResponse) Reset()         { *m = CalcSubtractResponse{} }
func (m *CalcSubtractResponse) String() string { return proto.CompactTextString(m) }
func (*CalcSubtractResponse) ProtoMessage()    {}
func (*CalcSubtractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8432beec2b3a0045, []int{2}
}

func (m *CalcSubtractResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalcSubtractResponse.Unmarshal(m, b)
}
func (m *CalcSubtractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalcSubtractResponse.Marshal(b, m, deterministic)
}
func (m *CalcSubtractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalcSubtractResponse.Merge(m, src)
}
func (m *CalcSubtractResponse) XXX_Size() int {
	return xxx_messageInfo_CalcSubtractResponse.Size(m)
}
func (m *CalcSubtractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalcSubtractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalcSubtractResponse proto.InternalMessageInfo

func (m *CalcSubtractResponse) GetResult() float32 {
	if m != nil {
		return m.Result
	}
	return 0
}

// Pesan berupa response output server untuk pembagian
type CalcDivideResponse struct {
	Result               float32  `protobuf:"fixed32,1,opt,name=result,proto3" json:"result,omitempty"`
	ZeroDiv              bool     `protobuf:"varint,2,opt,name=zero_div,json=zeroDiv,proto3" json:"zero_div,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalcDivideResponse) Reset()         { *m = CalcDivideResponse{} }
func (m *CalcDivideResponse) String() string { return proto.CompactTextString(m) }
func (*CalcDivideResponse) ProtoMessage()    {}
func (*CalcDivideResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8432beec2b3a0045, []int{3}
}

func (m *CalcDivideResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalcDivideResponse.Unmarshal(m, b)
}
func (m *CalcDivideResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalcDivideResponse.Marshal(b, m, deterministic)
}
func (m *CalcDivideResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalcDivideResponse.Merge(m, src)
}
func (m *CalcDivideResponse) XXX_Size() int {
	return xxx_messageInfo_CalcDivideResponse.Size(m)
}
func (m *CalcDivideResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalcDivideResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalcDivideResponse proto.InternalMessageInfo

func (m *CalcDivideResponse) GetResult() float32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *CalcDivideResponse) GetZeroDiv() bool {
	if m != nil {
		return m.ZeroDiv
	}
	return false
}

// Pesan berupa response output server untuk perkalian
type CalcMultiplyResponse struct {
	Result               float32  `protobuf:"fixed32,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalcMultiplyResponse) Reset()         { *m = CalcMultiplyResponse{} }
func (m *CalcMultiplyResponse) String() string { return proto.CompactTextString(m) }
func (*CalcMultiplyResponse) ProtoMessage()    {}
func (*CalcMultiplyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8432beec2b3a0045, []int{4}
}

func (m *CalcMultiplyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalcMultiplyResponse.Unmarshal(m, b)
}
func (m *CalcMultiplyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalcMultiplyResponse.Marshal(b, m, deterministic)
}
func (m *CalcMultiplyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalcMultiplyResponse.Merge(m, src)
}
func (m *CalcMultiplyResponse) XXX_Size() int {
	return xxx_messageInfo_CalcMultiplyResponse.Size(m)
}
func (m *CalcMultiplyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalcMultiplyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalcMultiplyResponse proto.InternalMessageInfo

func (m *CalcMultiplyResponse) GetResult() float32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*CalcRequest)(nil), "calculator.CalcRequest")
	proto.RegisterType((*CalcAddResponse)(nil), "calculator.CalcAddResponse")
	proto.RegisterType((*CalcSubtractResponse)(nil), "calculator.CalcSubtractResponse")
	proto.RegisterType((*CalcDivideResponse)(nil), "calculator.CalcDivideResponse")
	proto.RegisterType((*CalcMultiplyResponse)(nil), "calculator.CalcMultiplyResponse")
}

func init() {
	proto.RegisterFile("rpc_function/calculator_rpc/calculator.proto", fileDescriptor_8432beec2b3a0045)
}

var fileDescriptor_8432beec2b3a0045 = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x51, 0x4b, 0xc3, 0x30,
	0x14, 0x85, 0x59, 0x1f, 0xb6, 0x72, 0x15, 0x84, 0x20, 0x3a, 0x37, 0x94, 0xd1, 0x27, 0x05, 0xa9,
	0x58, 0x7f, 0x80, 0xa8, 0x1b, 0xe2, 0x83, 0x2f, 0xdd, 0x9b, 0x2f, 0x25, 0x4b, 0xae, 0x10, 0x08,
	0x4d, 0x4c, 0x93, 0x82, 0xfe, 0x25, 0xff, 0xa4, 0x74, 0x76, 0x2e, 0x46, 0x6a, 0xd9, 0xe3, 0xc9,
	0x39, 0x9c, 0xdc, 0xfb, 0x71, 0xe1, 0xd2, 0x68, 0x56, 0xbc, 0xba, 0x92, 0x59, 0xa1, 0xca, 0x2b,
	0x46, 0x25, 0x73, 0x92, 0x5a, 0x65, 0x0a, 0xa3, 0x99, 0x27, 0x53, 0x6d, 0x94, 0x55, 0x04, 0xb6,
	0x2f, 0xc9, 0x02, 0xf6, 0x1e, 0xa8, 0x64, 0x39, 0xbe, 0x39, 0xac, 0x2c, 0x99, 0x40, 0xac, 0x34,
	0x1a, 0x5a, 0xf2, 0xeb, 0xf1, 0x60, 0x36, 0x38, 0x8f, 0xf2, 0x1f, 0xed, 0x79, 0xd9, 0x38, 0xfa,
	0xe5, 0x65, 0xc9, 0x05, 0x1c, 0x34, 0x35, 0x77, 0x9c, 0xe7, 0x58, 0x69, 0x55, 0x56, 0x48, 0x8e,
	0x60, 0x68, 0xb0, 0x72, 0xd2, 0xb6, 0x45, 0xad, 0x4a, 0x52, 0x38, 0x6c, 0xa2, 0x4b, 0xb7, 0xb2,
	0x86, 0x32, 0xdb, 0x9b, 0x7f, 0x04, 0xd2, 0xe4, 0xe7, 0xa2, 0x16, 0x1c, 0xfb, 0xd2, 0xe4, 0x04,
	0xe2, 0x0f, 0x34, 0xaa, 0xe0, 0xa2, 0x5e, 0x0f, 0x19, 0xe7, 0xa3, 0x46, 0xcf, 0x45, 0xbd, 0xf9,
	0xf8, 0xd9, 0x49, 0x2b, 0xb4, 0x7c, 0xef, 0xab, 0xca, 0x3e, 0xa3, 0x6f, 0x36, 0x4b, 0x34, 0xb5,
	0x60, 0x48, 0x6e, 0x61, 0xd4, 0xee, 0x48, 0x8e, 0x53, 0x0f, 0xaa, 0xc7, 0x6f, 0x32, 0x0d, 0x0d,
	0x9f, 0xc8, 0x13, 0xec, 0xfb, 0x9b, 0x77, 0xb7, 0xcc, 0x42, 0xe3, 0x0f, 0xac, 0x05, 0xc0, 0x16,
	0x4a, 0x77, 0xd1, 0x59, 0x68, 0x04, 0x14, 0xdb, 0x89, 0x36, 0x48, 0x76, 0x98, 0x28, 0xa4, 0x78,
	0x7f, 0xfa, 0x32, 0xfd, 0xe7, 0x08, 0x57, 0xc3, 0xf5, 0xe9, 0xdd, 0x7c, 0x05, 0x00, 0x00, 0xff,
	0xff, 0x5c, 0xdb, 0x37, 0x94, 0xaa, 0x02, 0x00, 0x00,
}
